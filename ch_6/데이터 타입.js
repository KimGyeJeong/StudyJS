console.log('helloworld');
// ch.6 데이터 타입

// 데이터 타입
// - 원시타입
//      1. 숫자(number)타입. 숫자 정수와 실수 구분 없이 하나의 숫자 타입만 존재
//      2. 문자열(string)타입. 문자열
//      3. 불리언(boolean)타입. 논리적 참(true)과 거짓(false)
//      4. undefined 타입. var 키워드로 선언된 변수에 암묵적으로 할당되는 값
//      5. null 타입. 값이 없다는 것을 의도적으로 명시할 때 사용하는 값
//      6. 심벌(symbol)타입. ES6에서 추가된 7번째 타입
// - 객체타입
//      7. 객체타입. 객체, 함수, 배열등

// 숫자타입
// 추가적으로 세 가지 특별한 값 표현 가능
// - Infinity : 양의 무한대
// - -Infinity : 음의 무한대
// - NaN : 산수 연산 불가(not a number)

// 이스케이프 시퀀스(escape sequence)
// \0 : null
// \b : 백스페이스
// \f : 폼 피드(form feed). 프린터로 출력할 경우 다음 페이지의 시작지점으로 이동
// \n : 개행(Line feed). 다음행으로 이동
// \r : 개행(Carriage return). 커서를 처음으로 이동
// \t : 탭(수평)
// \v : 탭(수직)
// \uXXXX : 유니코드. 예) \u0041 은 A, \uD55C는 한
// \' : 작은따옴표
// \" : 큰따옴표
// \\ : 백슬래시

// 심벌타입
// 심벌은 변경 불가능한 원시타입의 값. 
// 심벌값은 다른값과 중복되지 않는 유일무이한 값.
// 주로 이름이 충돌할 위험이 없는 객체의 유일한 프로퍼티 키를 만들기 위해 사용
//예제 6.20
// 심벌값 생성
var key = Symbol('key');
console.log(typeof key);    //symbol
// 객체 생성
var obj = {};
// 이름이 충돌할 위험이 없는 유일무이한 값인 심벌을 프로퍼티 키로 사용함
obj[key] = 'value';
console.log(obj[key]);  //value

// 자바스크립트의 변수는 선언이 아닌 할당에 의해 타입이 결정(타입 추론-type inference)된다.
// 그리고 재할당에 의해 변수의 타입은 언제든지 동적으로 변할 수 있다.