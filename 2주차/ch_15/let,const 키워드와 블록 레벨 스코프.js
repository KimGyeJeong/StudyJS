console.log('helloworld');
// ch.15 let, const 키워드와 블록 레벨 스코프

// var 키워드의 문제점
// - 변수 중복 선언 허용.
// - 함수 레벨 스코프.
// - 변수 호이스팅. 변수 선언문 이전에 변수를 참조하는 것은 변수 호이스팅에 의해 에러를 발생시키지는 않는다.

// let 키워드
// - 변수 중복 선언 금지. 같은 변수를 중복 선언하면 문법에러 가 발생
// - 블록 레벨 스코프
// - 변수 호이스팅. let 키워드로 선언한 변수는 '선언단계', '초기화단계'가 분리되어 이루어짐. 변순 선언문 이전에 참조하면 참조에러가 발생함.
// - 전역개체와 let.
//      var 키워드로 선언한 전역 변수와 전역 함수, 그리고 선언하지 않은 변수에 값을 할당한 암묵적 전역은 전역 객체 window의 프로퍼티가 됨.
//      let 키워드로 선언한 변수는 전역 객체의 프로퍼티가 아닌 개념적인 블록내에 존재함.

// const 키워드
// - 선언과 초기화. const 키워드로 선언한 변수는 반드시 선언과 동시에 초기화해야한다.
//              let 키워드로 선언한 변수와 마찬가지로 블록레벨 스코프를 가지며, 변수 호이스팅이 발생하지 않는 것처럼 동작한다.
// - 재할당 금지. const 키워드로 선언한 변수는 재할당이 금지됨.
// - 상수. 변수의 상대 개념인 상수는 재할당이 금지된 변수.
//      const 키워드로 선언된 변수에 원시 값을 할당한 경우 원시 값은 변경할수 없는 값이고 const 키워드에 의해 재할당이 금지되므로 할당된 값을 변경할 수 있는 방법은 없다.
// - const 키워드와 객체. const 키워드로 선언된 변수에 객체를 할당한 경우 값을 변경할 수 있다.
//      const 키워드는 재할당을 금지할 뿐 불변을 의미하지는 않음.